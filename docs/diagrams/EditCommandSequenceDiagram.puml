@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ClinicParser" as ClinicParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant ":ParserUtil" as ParserUtil LOGIC_COLOR
participant "e:EditCommand" as EditCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit ct/s i/1 n/Claire")
activate LogicManager

LogicManager -> ClinicParser : parseCommand("edit ct/s i/1 n/Claire")
activate ClinicParser

create EditCommandParser
ClinicParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> ClinicParser
deactivate EditCommandParser

ClinicParser -> EditCommandParser : parse("ct/s i/1 n/Claire")
activate EditCommandParser

ref over EditCommandParser
Tokenising and retrieving of values from user input
end

create ParserUtil
EditCommandParser -> ParserUtil : parseType(type), parseIndex(index)
activate ParserUtil
ParserUtil --> EditCommandParser
deactivate ParserUtil

ref over EditCommandParser
Creation of appropriate EditDesciptor for EditCommand
end

create EditCommand
EditCommandParser -> EditCommand : EditCommand(index, descriptor)
activate EditCommand
EditCommand --> EditCommandParser : e
deactivate EditCommand
EditCommandParser --> ClinicParser : e

destroy EditCommandParser

ClinicParser --> LogicManager : e

LogicManager -> EditCommand : execute()
activate EditCommand
ref over LogicManager, Model
Execution of EditCommand
end
EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager : result
deactivate LogicManager

@enduml
